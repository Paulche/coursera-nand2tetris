// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    Mux8Way16 (a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7, out=out, sel=address);

    DMux8Way (in=load, sel=address, a=reg0-load, b=reg1-load, c=reg2-load, d=reg3-load, e=reg4-load, f=reg5-load, g=reg6-load, h=reg7-load);

    Register (in=in, out=reg0, load=reg0-load);
    Register (in=in, out=reg1, load=reg1-load);
    Register (in=in, out=reg2, load=reg2-load);
    Register (in=in, out=reg3, load=reg3-load);
    Register (in=in, out=reg4, load=reg4-load);
    Register (in=in, out=reg5, load=reg5-load);
    Register (in=in, out=reg6, load=reg6-load);
    Register (in=in, out=reg7, load=reg7-load);
}
