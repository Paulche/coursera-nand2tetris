// True table

// Jump | J0 | J1 | J2 | N | Z | F
// null | 0  | 0  | 0  | 0 | 0 | 0 
// JGT  | 0  | 0  | 1  | 0 | 0 | 1
// JEQ  | 0  | 1  | 0  | 0 | 0 | 0
// JGE  | 0  | 1  | 1  | 0 | 0 | 1
// JLT  | 1  | 0  | 0  | 0 | 0 | 0
// JNE  | 1  | 0  | 1  | 0 | 0 | 1
// JLE  | 1  | 1  | 0  | 0 | 0 | 0
// JMP  | 1  | 1  | 1  | 0 | 0 | 1
// 
// null | 0  | 0  | 0  | 1 | 0 | 0 
// JGT  | 0  | 0  | 1  | 1 | 0 | 0
// JEQ  | 0  | 1  | 0  | 1 | 0 | 0
// JGE  | 0  | 1  | 1  | 1 | 0 | 0
// JLT  | 1  | 0  | 0  | 1 | 0 | 1
// JNE  | 1  | 0  | 1  | 1 | 0 | 1
// JLE  | 1  | 1  | 0  | 1 | 0 | 1
// JMP  | 1  | 1  | 1  | 1 | 0 | 1
// 
// null | 0  | 0  | 0  | 0 | 1 | 0 
// JGT  | 0  | 0  | 1  | 0 | 1 | 0
// JEQ  | 0  | 1  | 0  | 0 | 1 | 1
// JGE  | 0  | 1  | 1  | 0 | 1 | 1
// JLT  | 1  | 0  | 0  | 0 | 1 | 0
// JNE  | 1  | 0  | 1  | 0 | 1 | 0
// JLE  | 1  | 1  | 0  | 0 | 1 | 1
// JMP  | 1  | 1  | 1  | 0 | 1 | 1

CHIP Jump {
  IN j0, j1, j2, n, z;
  OUT f;

  PARTS:
  Mux   (a=mux1-out, b=j0, out=f, sel=n);
  Mux   (a=j2, b=j1, sel=z, out=mux1-out);
}
